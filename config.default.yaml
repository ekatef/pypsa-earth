# SPDX-FileCopyrightText:  PyPSA-Earth and PyPSA-Eur Authors
#
# SPDX-License-Identifier: CC0-1.0

version: 0.4.1
tutorial: false

logging:
  level: INFO
  format: "%(levelname)s:%(name)s:%(message)s"

results_dir: results/
summary_dir: results/
costs_dir: data/ # TODO change to the equivalent of technology data

foresight: overnight


countries: ["NG", "BJ"]
# Can be replaced by country ["NG", "BJ"], continent ["Africa"] or user-specific region, see more at https://pypsa-earth.readthedocs.io/en/latest/configuration.html#top-level-configuration

enable:
  retrieve_databundle: true #  Recommended 'true', for the first run. Otherwise data might be missing.
  retrieve_databundle_sector: true
  retrieve_cost_data: true # true: retrieves cost data from technology data and saves in resources/costs.csv, false: uses cost data in data/costs.csv
  download_osm_data: true # If 'true', OpenStreetMap data will be downloaded for the above given countries
  build_natura_raster: false # If True, then an exclusion raster will be build
  build_cutout: false
  # If "build_cutout" : true, then environmental data is extracted according to `snapshots` date range and `countries`
  # requires cds API key https://cds.climate.copernicus.eu/api-how-to
  # More information https://atlite.readthedocs.io/en/latest/introduction.html#datasets
  progress_bar: true # show progress bar during downloading routines and other long-running tasks


custom_rules: [] # Default empty [] or link to custom rule file e.g. ["my_folder/my_rules.smk"] that add rules to Snakefile

run:
  name: "" # use this to keep track of runs with different settings
  shared_cutouts: true # set to true to share the default cutout(s) across runs
  # Note: value false requires build_cutout to be enabled
  allow_scenario_failure: false # If True, the workflow will continue even if a scenario in run_scnenario fails

scenario:
  simpl: [""]
  ll: ["copt"]
  clusters: [10]
  opts: [Co2L-3H]
  planning_horizons: # investment years for myopic and perfect; or costs year for overnight
  - 2030
  sopts:
  - "144H"
  demand:
  - "AB"

snapshots:
  start: "2013-01-01"
  end: "2014-01-01"
  inclusive: "left" # end is not inclusive

# download_osm_data_nprocesses: 10  # (optional) number of threads used to download osm data

augmented_line_connection:
  add_to_snakefile: false # If True, includes this rule to the workflow
  connectivity_upgrade: 2 # Min. lines connection per node,
  # https://networkx.org/documentation/stable/reference/algorithms/generated/networkx.algorithms.connectivity.edge_augmentation.k_edge_augmentation.html#networkx.algorithms.connectivity.edge_augmentation.k_edge_augmentation
  new_line_type: ["HVAC"] # Expanded lines can be either ["HVAC"] or ["HVDC"] or both ["HVAC", "HVDC"]
  min_expansion: 1 # [MW] New created line expands by float/int input
  min_DC_length: 600 # [km] Minimum line length of DC line

cluster_options:
  simplify_network:
    exclude_carriers: []
    remove_stubs: true
    remove_stubs_across_borders: true
    p_threshold_drop_isolated: 20 # [MW] isolated buses are being discarded if bus mean power is below the specified threshold
    p_threshold_merge_isolated: 300 # [MW] isolated buses are being merged into a single isolated bus if a bus mean power is below the specified threshold
    s_threshold_fetch_isolated: 0.05 # [-] a share of the national load for merging an isolated network into a backbone network

build_shape_options:
  gadm_layer_id: 1 # GADM level area used for the gadm_shapes. Codes are country-dependent but roughly: 0: country, 1: region/county-like, 2: municipality-like
  out_logging: true # When true, logging is printed to console
  year: 2020 # reference year used to derive shapes, info on population and info on GDP
  nprocesses: 3 # number of processes to be used in build_shapes
  worldpop_method: "standard" # "standard" pulls from web 1kmx1km raster, "api" pulls from API 100mx100m raster,
  # false (not "false") no pop addition to shape which is useful when generating only cutout
  gdp_method: "standard" # "standard" pulls from web 1x1km raster, false (not "false") no gdp addition to shape which useful when generating only cutout
  contended_flag: "set_by_country" # "set_by_country" assigns the contended areas to the countries according to the GADM database, "drop" drops these contended areas from the model

build_osm_network: # Options of the build_osm_network script; osm = OpenStreetMap
  force_ac: false # When true, it forces all components (lines and substation) to be AC-only. To be used if DC assets create problem.

load_options:
  ssp: "ssp2-2.6" # shared socio-economic pathway (GDP and population growth) scenario to consider
  prediction_year: 2030 # Load scenarios available with different prediction year (GDP, population)
  scale: 1 # scales all load time-series, i.e. 2 = doubles load

electricity:
  co2limit: 7.75e+7 # European default, 0.05 * 3.1e9*0.5, needs to be adjusted for Africa
  co2base: 1.487e+9 # European default, adjustment to Africa necessary
  automatic_emission: false
  automatic_emission_base_year: 1990 # 1990 is taken as default. Any year from 1970 to 2018 can be selected.

  max_hours:
    battery: 6
    H2: 168

  extendable_carriers:
    Generator: [solar, onwind, offwind-ac, offwind-dc, OCGT]
    StorageUnit: [] # battery, H2
    Store: [battery, H2]
    Link: [] # H2 pipeline

  powerplants_filter: (DateOut >= 2022 or DateOut != DateOut)
  custom_powerplants: false #  "false" use only powerplantmatching (ppm) data, "merge" combines ppm and custom powerplants, "replace" use only custom powerplants

  conventional_carriers: [nuclear, oil, OCGT, CCGT, coal, lignite, geothermal, biomass]
  renewable_carriers: [solar, onwind, offwind-ac, offwind-dc, hydro]

  estimate_renewable_capacities:
    stats: "irena" # False, = greenfield expansion, 'irena' uses IRENA stats to add expansion limits
    year: 2023 # Reference year, available years for IRENA stats are 2000 to 2023
    p_nom_min: 1 # any float, scales the minimum expansion acquired from stats, i.e. 110% of <years>'s capacities => p_nom_min: 1.1
    p_nom_max: false # sets the expansion constraint, False to deactivate this option and use estimated renewable potentials determine by the workflow, float scales the p_nom_min factor accordingly
    technology_mapping:
      # Wind is the Fueltype in ppm.data.Capacity_stats, onwind, offwind-{ac,dc} the carrier in PyPSA-Earth
      Offshore: [offwind-ac, offwind-dc]
      Onshore: [onwind]
      PV: [solar]

# ------------------- SECTOR OPTIONS -------------------

policy_config:
  hydrogen:
    temporal_matching: "no_res_matching" # either "h2_yearly_matching", "h2_monthly_matching", "no_res_matching"
    spatial_matching: false
    additionality: false # RE electricity is equal to the amount required for additional hydrogen export compared to the 0 export case ("reference_case")
    allowed_excess: 1.0
    is_reference: false # Whether or not this network is a reference case network, relevant only if additionality is _true_
    remove_h2_load: false #Whether or not to remove the h2 load from the network, relevant only if is_reference is _true_
    path_to_ref: "" # Path to the reference case network for additionality calculation, relevant only if additionality is _true_ and is_reference is _false_
    re_country_load: false # Set to "True" to force the RE electricity to be equal to the electricity required for hydrogen export and the country electricity load. "False" excludes the country electricity load from the constraint.


demand_data:
  update_data: true # if true, the workflow downloads the energy balances data saved in data/demand/unsd/data again. Turn on for the first run.
  base_year: 2019

  other_industries: false # Whether or not to include industries that are not specified. some countries have has exaggerated numbers, check carefully.
  aluminium_year: 2019 # Year of the aluminium demand data specified in `data/AL_production.csv`


fossil_reserves:
  oil: 100 #TWh Maybe redundant

export:
  h2export: [10] # Yearly export demand in TWh
  store: true # [True, False] # specifies whether an export store to balance demand is implemented
  store_capital_costs: "no_costs" # ["standard_costs", "no_costs"] # specifies the costs of the export store. "standard_costs" takes CAPEX of "hydrogen storage tank type 1 including compressor"
  export_profile: "ship" # use "ship" or "constant"
  ship:
    ship_capacity: 0.4 # TWh # 0.05 TWh for new ones, 0.003 TWh for Susio Frontier, 0.4 TWh according to Hampp2021: "Corresponds to 11360 t H2 (l) with LHV of 33.3333 Mwh/t_H2. Cihlar et al 2020 based on IEA 2019, Table 3-B"
    travel_time: 288 # hours # From Agadir to Rotterdam and back (12*24)
    fill_time: 24 # hours, for 48h see Hampp2021
    unload_time: 24 # hours for 48h see Hampp2021

custom_data:
  renewables: [] # ['csp', 'rooftop-solar', 'solar']
  elec_demand: false
  heat_demand: false
  industry_demand: false
  industry_database: false
  transport_demand: false
  water_costs: false
  h2_underground: false
  add_existing: false
  custom_sectors: false
  gas_network: false # If "True" then a custom .csv file must be placed in "resources/custom_data/pipelines.csv" , If "False" the user can choose btw "greenfield" or Model built-in datasets. Please refer to ["sector"] below.

industry:
  reference_year: 2015

existing_capacities:
  grouping_years_power: [1960, 1965, 1970, 1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015, 2020, 2025, 2030]
  grouping_years_heat: [1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015, 2019] # these should not extend 2020
  threshold_capacity: 10
  default_heating_lifetime: 20
  conventional_carriers:
  - lignite
  - coal
  - oil
  - uranium

sector:
  gas:
    spatial_gas: true # ALWAYS TRUE
    network: false # ALWAYS FALSE for now (NOT USED)
    network_data: GGIT # Global dataset -> 'GGIT' , European dataset -> 'IGGIELGN'
    network_data_GGIT_status: ["Construction", "Operating", "Idle", "Shelved", "Mothballed", "Proposed"]
  hydrogen:
    network: true
  coal:
    shift_to_elec: true # If true, residential and services demand of coal is shifted to electricity. If false, the final energy demand of coal is disregarded

  international_bunkers: false #Whether or not to count the emissions of international aviation and navigation

  oil:
    spatial_oil: true

  co2_network: true
  co2_sequestration_potential: 200 #MtCO2/a sequestration potential for Europe
  co2_sequestration_cost: 10 #EUR/tCO2 for sequestration of CO2
  hydrogen_underground_storage: true
  shipping_hydrogen_liquefaction: false
  shipping_average_efficiency: 0.4 #For conversion of fuel oil to propulsion in 2011

  gadm_level: 1
  h2_cavern: true
  marginal_cost_storage: 0
  methanation: true
  helmeth: true
  dac: true
  SMR: true
  SMR CC: true
  cc_fraction: 0.9
  cc: true
  space_heat_share: 0.6 # the share of space heating from all heating. Remainder goes to water heating.
  airport_sizing_factor: 3

  min_part_load_fischer_tropsch: 0.9

  conventional_generation: # generator : carrier
    OCGT: gas
    #Gen_Test: oil # Just for testing purposes
